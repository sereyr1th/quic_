#!/bin/bash

echo "üöÄ QUIC HTTP/3 Migration Testing - Local Network Approach"
echo "========================================================"
echo ""

# Function to get local IP
get_local_ip() {
    ip route get 8.8.8.8 | awk '{print $7; exit}'
}

# Build the server
echo "üì¶ Building QUIC server..."
go build -o quic-server main.go

if [ $? -ne 0 ]; then
    echo "‚ùå Failed to build server"
    exit 1
fi

echo "‚úÖ Server built successfully"
echo ""

# Get current IP
LOCAL_IP=$(get_local_ip)

# Start the QUIC server
echo "üîß Starting QUIC server..."
./quic-server &
SERVER_PID=$!

sleep 3

if ! kill -0 $SERVER_PID 2>/dev/null; then
    echo "‚ùå Server failed to start"
    exit 1
fi

echo "‚úÖ QUIC server is running (PID: $SERVER_PID)"
echo ""

echo "üåê HTTP/3 Testing URLs:"
echo "======================"
echo ""
echo "üì± Phone (WiFi): https://$LOCAL_IP:9443"
echo "üñ•Ô∏è  Desktop: https://localhost:9443"
echo "üß™ API Test: https://$LOCAL_IP:9443/api/test"
echo "üìä Connections: https://$LOCAL_IP:9443/api/connections"
echo ""

echo "üî• HTTP/3 Testing Instructions:"
echo "==============================="
echo ""
echo "1. ‚úÖ Make sure your phone and computer are on the SAME WiFi"
echo "2. üì± Open Chrome on your phone with HTTP/3 enabled:"
echo "   chrome://flags/#enable-quic"
echo "3. üåê Visit: https://$LOCAL_IP:9443"
echo "4. ‚ö†Ô∏è  Accept the security warning (self-signed cert)"
echo "5. üß™ Test /api/test endpoint multiple times"
echo "6. üîç Check Chrome DevTools -> Network tab -> Protocol column"
echo "7. üìä Visit /api/connections to see connection info"
echo ""

echo "üéØ For REAL HTTP/3 Migration Testing:"
echo "====================================="
echo ""
echo "Option A: WiFi Band Switching (Same network)"
echo "‚Ä¢ Switch between 2.4GHz and 5GHz WiFi bands"
echo "‚Ä¢ Keep same browser tab open"
echo "‚Ä¢ Connection should migrate seamlessly"
echo ""
echo "Option B: Mobile Hotspot Testing"
echo "‚Ä¢ Connect laptop to your phone's hotspot"
echo "‚Ä¢ Phone acts as server host"
echo "‚Ä¢ Switch phone between WiFi networks"
echo "‚Ä¢ Test from laptop browser"
echo ""
echo "Option C: Router with Multiple Access Points"
echo "‚Ä¢ Use mesh network or WiFi extenders"
echo "‚Ä¢ Move between different access points"
echo "‚Ä¢ Same network, different connection paths"
echo ""

echo "üö® Why ngrok doesn't work for HTTP/3:"
echo "======================================"
echo ""
echo "‚ùå ngrok only supports HTTP/1.1 and HTTP/2"
echo "‚ùå ngrok cannot forward UDP traffic (required for QUIC)"
echo "‚ùå QUIC/HTTP/3 requires direct UDP connection"
echo "‚úÖ Local network testing is the most accurate"
echo ""

echo "üîç Look for these indicators:"
echo "=========================="
echo "‚Ä¢ üöÄ emoji in server logs = HTTP/3 request"
echo "‚Ä¢ üîÑ emoji in server logs = Connection migration"
echo "‚Ä¢ Protocol: HTTP/3.0 üöÄ in API responses"
echo ""

# Function to cleanup on exit
cleanup() {
    echo ""
    echo "üõë Stopping server..."
    kill $SERVER_PID 2>/dev/null
    echo "‚úÖ Cleanup complete"
    exit 0
}

trap cleanup SIGINT SIGTERM

echo "‚èπÔ∏è  Press Ctrl+C to stop"
echo ""

# Keep running
wait $SERVER_PID
